


March 20 ChatGPT outage: Here’s what happened












CloseSearch Submit Skip to main contentSite NavigationResearchOverviewIndexProductOverviewChatGPTGPT-4DALLÂ·E 2Customer storiesSafety standardsAPI data privacyPricingDevelopersOverviewDocumentationAPI referenceExamplesSafetyCompanyAboutBlogCareersCharterSecuritySearch Navigation quick links Log inSign upMenu Mobile Navigation CloseSite NavigationResearchProductDevelopersSafetyCompany Quick Links Log inSign upSearch Submit March 20 ChatGPT outage: Hereâs what happenedAn update on our findings, the actions weâve taken, and technical details of the bug.March 24, 2023AuthorsOpenAI AnnouncementsWe took ChatGPT offline earlier this week due to a bug in an open-source library which allowed some users to see titles from another active userâs chat history. Itâs also possible that the first message of a newly-created conversation was visible in someone elseâs chat history if both users were active around the same time.The bug is now patched. We were able to restore both the ChatGPT service and, later, its chat history feature, with the exception of a few hours of history. As promised, weâre publishing more technical details of this problem below.Upon deeper investigation, we also discovered that the same bug may have caused the unintentional visibility of payment-related information of 1.2% of the ChatGPT Plus subscribers who were active during a specific nine-hour window. In the hours before we took ChatGPT offline on Monday, it was possible for some users to see another active userâs first and last name, email address, payment address, credit card type and the last four digits (only) of a credit card number, and credit card expiration date. Full credit card numbers were not exposed at any time.Â We believe the number of users whose data was actually revealed to someone else is extremely low. To access this information, a ChatGPT Plus subscriber would have needed to do one of the following:Open a subscription confirmation email sent on Monday, March 20, between 1 a.m. and 10 a.m. Pacific time. Due to the bug, some subscription confirmation emails generated during that window were sent to the wrong users. These emails contained the credit card type and last four digits of another userâs credit card number, but full credit card numbers did not appear. Itâs possible that a small number of subscription confirmation emails might have been incorrectly addressed prior to March 20, although we have not confirmed any instances of this.In ChatGPT, click on âMy account,â then âManage my subscriptionâ between 1 a.m. and 10 a.m. Pacific time on Monday, March 20. During this window, another active ChatGPT Plus userâs first and last name, email address, payment address, the credit card type and  last four digits (only) of a credit card number, and credit card expiration date might have been visible. Itâs possible that this also could have occurred prior to March 20, although we have not confirmed any instances of this.We have reached out to notify affected users that their payment information may have been exposed. We are confident that there is no ongoing risk to usersâ data.Â Everyone at OpenAI is committed to protecting our usersâ privacy and keeping their data safe. Itâs a responsibility we take incredibly seriously. Unfortunately, this week we fell short of that commitment, and of our usersâ expectations. We apologize again to our users and to the entire ChatGPT community and will work diligently to rebuild trust.Technical detailsThe bug was discovered in the Redis client open-source library, redis-py. As soon as we identified the bug, we reached out to the Redis maintainers with a patch to resolve the issue. Hereâs how the bug worked:Â We use Redis to cache user information in our server so we donât need to check our database for every request.Â We use Redis Cluster to distribute this load over multiple Redis instances.Â We use the redis-py library to interface with Redis from our Python server, which runs with Asyncio.Â The library maintains a shared pool of connections between the server and the cluster, and recycles a connection to be used for another request once done.When using Asyncio, requests and responses with redis-py behave as two queues: the caller pushes a request onto the incoming queue, and will pop a response from the outgoing queue, and then return the connection to the pool.If a request is canceled after the request is pushed onto the incoming queue, but before the response popped from the outgoing queue, we see our bug: the connection thus becomes corrupted and the next response thatâs dequeued for an unrelated request can receive data left behind in the connection.Â In most cases, this results in an unrecoverable server error, and the user will have to try their request again.Â But in some cases the corrupted data happens to match the data type the requester was expecting, and so what gets returned from the cache appears valid, even if it belongs to another user.At 1 a.m. Pacific time on Monday, March 20, we inadvertently introduced a change to our server that caused a spike in Redis request cancellations. This created a small probability for each connection to return bad data.This bug only appeared in the Asyncio redis-py client for Redis Cluster, and has now been fixed.Actions weâve takenAs our investigation wraps up, supporting and informing our users is our top priority.Â We have taken the following actions to improve our systems:Extensively tested our fix to the underlying bug.Added redundant checks to ensure the data returned by our Redis cache matches the requesting user.Programatically examined our logs to make sure that all messages are only available to the correct user.Correlated several data sources to precisely identify the affected users so that we can notify them.Improved logging to identify when this is happening and fully confirm it has stopped.Improved the robustness and scale of our Redis cluster to reduce the likelihood of connection errors at extreme load.Where we go from hereThe Redis open-source maintainers have been fantastic collaborators, swiftly addressing the bug and rolling out a patch. Redis, along with other open-source software, plays a crucial role in our research efforts. Their significance cannot be understatedâwe would not have been able to scale ChatGPT without Redis. Weâre dedicated to continually supporting and contributing to the Redis community.AuthorsOpenAI View all articlesResearchOverviewIndexProductOverviewChatGPTGPT-4DALLÂ·E 2Customer storiesSafety standardsAPI data privacyPricingSafetyOverviewCompanyAboutBlogCareersCharterSecurityOpenAI Â© 2015âââ2023Terms & policiesPrivacy policyBrand guidelinesSocialTwitterYouTubeGitHubSoundCloudLinkedInBack to top
